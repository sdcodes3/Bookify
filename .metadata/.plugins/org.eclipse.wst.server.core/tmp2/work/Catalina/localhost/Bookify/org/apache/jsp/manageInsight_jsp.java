/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.79
 * Generated at: 2022-12-25 16:55:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import p1.Login;
import java.sql.*;

public final class manageInsight_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("p1.Login");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"home.css\">\r\n");
      out.write("<!-- Bootstrap CDN CSS -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<title>Bookify => Manage Insight</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<nav class=\"navbar navbar-expand-lg navbar-light\">\r\n");
      out.write("        <div class=\"container-fluid py-1 px-4\">\r\n");
      out.write("            <a class=\"navbar-brand\" href=\"#\">\r\n");
      out.write("                Bookify\r\n");
      out.write("                <!-- <img src=\"img/image-removebg-preview (1).png\" class=\"img-fluid\"> -->\r\n");
      out.write("            </a>\r\n");
      out.write("            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n");
      out.write("                data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n");
      out.write("                aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("                <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("            </button>\r\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n");
      out.write("                <ul class=\"navbar-nav ms-auto gap-0 gap-lg-3\">\r\n");
      out.write("                    <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link active\" aria-current=\"page\" href=\"home.jsp\">Home</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link active\" aria-current=\"page\" href=\"addInsight.jsp\">Add Insight</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link active\" aria-current=\"page\" href=\"manageInsight.jsp\">Manage your Insight</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link active\" aria-current=\"page\" href=\"index.jsp?logout=true\">\r\n");
      out.write("                        ");

                        new Login();
                        int id = Integer.parseInt(session.getAttribute("userId").toString());
                        ResultSet rs = Login.st.executeQuery("SELECT name FROM user WHERE id="+id);
                        rs.next();
                        String name = rs.getString("name"); 
                        if(name.contains(" "))
                        	name = name.substring(0, name.indexOf(' ')); 
                        
      out.write("\r\n");
      out.write("                        <b>Hello ");
 out.print(name); 
      out.write("</b>, Logout?\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("    <div class=\"px-3 row g-0 gap-3\">\r\n");
      out.write("    	<div class=\"h2 text-center pt-4\">\r\n");
      out.write("    		Your Insights\r\n");
      out.write("    	</div>\r\n");
      out.write("    	");

		if("true".equals(session.getAttribute("deleteInsight"))){
			session.removeAttribute("deleteInsight");
		
      out.write("\r\n");
      out.write("		<div class=\"msg text-center fw-bold h5 text-success\">\r\n");
      out.write("			Insight Deleted Successfully!!\r\n");
      out.write("		</div>\r\n");
      out.write("		");
 } 
      out.write("\r\n");
      out.write("    	<div class=\"col\">\r\n");
      out.write("        	");

        	ResultSet rs3 = Login.st.executeQuery("SELECT insight.id,insight,user.name,book.name FROM insight,user,book WHERE insight.bookid = book.id and user.id = insight.userid and user.id = "+id);
        	while(rs3.next()){
	            
      out.write("\r\n");
      out.write("		            <div class=\"card mt-2\">\r\n");
      out.write("		                <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n");
      out.write("		                	<div>\r\n");
      out.write("		                    	");
 out.println(rs3.getString("book.name")); 
      out.write("\r\n");
      out.write("                    		</div>\r\n");
      out.write("                    		<form action=\"processInsight.jsp?manageInsight=1\" method=\"POST\">\r\n");
      out.write("                    			<input type=\"text\" value=\"");
 out.println(rs3.getInt("insight.id")); 
      out.write("\" name=\"insightId\" hidden=\"true\">\r\n");
      out.write("                    			<button class=\"btn btn-danger rounded-0 btn-sm\">Delete</button>\r\n");
      out.write("                    		</form>\r\n");
      out.write("		                </div>\r\n");
      out.write("		                <div class=\"card-body\">\r\n");
      out.write("		                    <blockquote class=\"blockquote mb-0\">\r\n");
      out.write("		                        <p>");
 out.print(rs3.getString("insight")); 
      out.write("</p>\r\n");
      out.write("		                        <footer class=\"blockquote-footer\"><cite title=\"");
 out.print(rs3.getString("name")); 
      out.write('"');
      out.write('>');
 out.print(rs3.getString("name")); 
      out.write("</cite></footer>\r\n");
      out.write("		                    </blockquote>\r\n");
      out.write("		                </div>\r\n");
      out.write("		            </div>\r\n");
      out.write("           	");
  }
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
